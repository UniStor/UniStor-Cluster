---
- name: All Drives
  debug:
    var: "ansible_facts.devices[item]"
  when: ansible_facts.devices[item].vendor is defined
    and ansible_facts.devices[item].vendor != None
  loop: "{{ ansible_facts.device_links.ids.keys()|list }}"

#--------------------------------------------------

- name: Used Drives
  debug:
    var: ansible_facts.devices[item].partitions
    # var: ansible_facts.devices[item].partitions | first
  when: (ansible_facts.devices[item].vendor is defined and ansible_facts.devices[item].vendor != None )
    and (ansible_facts.devices[item].partitions|length != 0)
  loop: "{{ ansible_facts.device_links.ids.keys()|list }}"


- name: Used Drive with a Partition
  set_fact:
    usedDrive: "{{ drivelist + [item] }}"
  when: ansible_facts.devices[item].vendor is defined
    and ansible_facts.devices[item].vendor != None
  loop: "{{ ansible_facts.devices.keys()|list }}"


#--------------------------------------------------

- name: Unique - UniStor VGs
  block:
  - name: Generator UniStor Vgs
    set_fact:
      all: "{{ all + ansible_facts.devices[item].holders }}"
      clean: []
      unistorVg: []
    when: (ansible_facts.devices[item].holders|length > 0) and ("stor.ata--" in ansible_facts.devices[item].holders[0])
    loop: "{{ ansible_facts.devices.keys() | list }}"

  - name: Transform - remove pool Suffix and double dash
    set_fact:
      clean: "{{ clean + item.split('-pool')[:-1] }}"
    loop: "{{ all | replace('--','-') }}"

  - name: Unique
    set_fact:
      unistorVg: "{{ unistorVg + [item] }}"
    loop: "{{ clean  | unique }}"
