---
- name: Logical Volumes - both Thick & Thin
  debug:
    var: "ansible_facts.devices[item].links.ids"
  when: (
    (ansible_facts.devices[item].virtual == 1) and
    (ansible_facts.devices[item].partitions|length == 0) and
    (ansible_facts.devices[item].links.ids|length > 0)
    )
  loop: "{{ ansible_facts.devices.keys()|list }}"


- name: Thin Volumes
  debug:
    var: "ansible_facts.devices[item]"
  when: (
    (ansible_facts.devices[item].virtual == 1) and
    (ansible_facts.devices[item].partitions|length == 0) and
    (ansible_facts.devices[item].links.ids|length > 0) and
    (ansible_facts.devices[item].links.uuids|length == 0)
    )
  loop: "{{ ansible_facts.devices.keys()|list }}"
  # Filter: links.uuids|length == 0 for Thin Volumes only

- name: Thick Volumes
  debug:
    var: "ansible_facts.devices[item]"
  when: (
    (ansible_facts.devices[item].virtual == 1) and
    (ansible_facts.devices[item].partitions|length == 0) and
    (ansible_facts.devices[item].links.ids|length > 0) and
    (ansible_facts.devices[item].links.uuids|length > 0)
    )
  loop: "{{ ansible_facts.devices.keys()|list }}"
  # Filter: links.uuids|length > 0 for Thick Volumes only
